// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "IntakeMaintain.h"
IntakeMaintain::IntakeMaintain():rollerValue(0.0)
{
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::intake);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}
// Called just before this Command runs the first time
void IntakeMaintain::Initialize() {
	rollerValue = Robot::intake->talon9->Get();
	timer.Start();
}
// Called repeatedly when this Command is scheduled to run
void IntakeMaintain::Execute() {
	Robot::intake->talon9->Set(rollerValue);
	if (Robot::oi->getCoDriver()->GetRawAxis(3) > 0.2)
	{
		if (timer.HasPeriodPassed(0.5))
		{
			if (Robot::intake->intakeDoubleSolenoid->Get() == DoubleSolenoid::kReverse)
			{
				Robot::intake->intakeDoubleSolenoid->Set(DoubleSolenoid::kForward);
				Robot::hugger->huggerDoubleSolenoid->Set(DoubleSolenoid::kReverse);
			}
		
			else
			{
				Robot::intake->intakeDoubleSolenoid->Set(DoubleSolenoid::kReverse);
				Robot::hugger->huggerDoubleSolenoid->Set(DoubleSolenoid::kForward);
			}
			timer.Reset();
		}
	}
}
// Make this return true when this Command no longer needs to run execute()
bool IntakeMaintain::IsFinished() {
	return false;
}
// Called once after isFinished returns true
void IntakeMaintain::End() {
	
}
// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void IntakeMaintain::Interrupted() {
}
