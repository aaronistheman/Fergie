// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
SpeedController* RobotMap::catapultTalon7 = NULL;
SpeedController* RobotMap::catapultTalon8 = NULL;
DoubleSolenoid* RobotMap::catapultCatapultDoubleSolenoid = NULL;
DigitalInput* RobotMap::catapultCatapultLimitSwitch = NULL;
SpeedController* RobotMap::chassisTalon1 = NULL;
SpeedController* RobotMap::chassisTalon2 = NULL;
SpeedController* RobotMap::chassisTalon3 = NULL;
SpeedController* RobotMap::chassisTalon4 = NULL;
SpeedController* RobotMap::chassisTalon5 = NULL;
SpeedController* RobotMap::chassisTalon6 = NULL;
SpeedController* RobotMap::intakeTalon9 = NULL;
DoubleSolenoid* RobotMap::intakeIntakeDoubleSolenoid = NULL;
Relay* RobotMap::intakeLights = NULL;
Compressor* RobotMap::pressurizerCompressor = NULL;
DoubleSolenoid* RobotMap::shifterShifterDoubleSolenoid = NULL;
DoubleSolenoid* RobotMap::huggerHuggerDoubleSolenoid = NULL;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
TripleMotor* RobotMap::leftDrive = NULL;
TripleMotor* RobotMap::rightDrive = NULL;
RobotDrive* RobotMap::chassisRobotDrive = NULL;
void RobotMap::init() {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	LiveWindow* lw = LiveWindow::GetInstance();
	catapultTalon7 = new Talon(1, 7);
	lw->AddActuator("Catapult", "Talon7", (Talon*) catapultTalon7);
	
	catapultTalon8 = new Talon(1, 8);
	lw->AddActuator("Catapult", "Talon8", (Talon*) catapultTalon8);
	
	catapultCatapultDoubleSolenoid = new DoubleSolenoid(1, 2, 6);      
	
	
	catapultCatapultLimitSwitch = new DigitalInput(1, 5);
	lw->AddSensor("Catapult", "CatapultLimitSwitch", catapultCatapultLimitSwitch);
	
	chassisTalon1 = new Talon(1, 1);
	lw->AddActuator("Chassis", "Talon1", (Talon*) chassisTalon1);
	
	chassisTalon2 = new Talon(1, 2);
	lw->AddActuator("Chassis", "Talon2", (Talon*) chassisTalon2);
	
	chassisTalon3 = new Talon(1, 3);
	lw->AddActuator("Chassis", "Talon3", (Talon*) chassisTalon3);
	
	chassisTalon4 = new Talon(1, 4);
	lw->AddActuator("Chassis", "Talon4", (Talon*) chassisTalon4);
	
	chassisTalon5 = new Talon(1, 5);
	lw->AddActuator("Chassis", "Talon5", (Talon*) chassisTalon5);
	
	chassisTalon6 = new Talon(1, 6);
	lw->AddActuator("Chassis", "Talon6", (Talon*) chassisTalon6);
	
	intakeTalon9 = new Talon(1, 9);
	lw->AddActuator("Intake", "Talon9", (Talon*) intakeTalon9);
	
	intakeIntakeDoubleSolenoid = new DoubleSolenoid(1, 1, 5);      
	
	
	intakeLights = new Relay(1, 2);
	lw->AddActuator("Intake", "Lights", intakeLights);
	
	pressurizerCompressor = new Compressor(1, 14, 1, 1);
	
	
	shifterShifterDoubleSolenoid = new DoubleSolenoid(1, 4, 8);      
	
	
	huggerHuggerDoubleSolenoid = new DoubleSolenoid(1, 3, 7);      
	
	
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	leftDrive = new TripleMotor(chassisTalon1, chassisTalon3, chassisTalon5);
	rightDrive = new TripleMotor(chassisTalon2, chassisTalon4, chassisTalon6);
	chassisRobotDrive = new RobotDrive(leftDrive, rightDrive);
}
